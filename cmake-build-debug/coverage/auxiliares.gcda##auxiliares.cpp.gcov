        -:    0:Source:/home/lakso/Documents/Facultad/Algo/tpi/auxiliares.cpp
        -:    0:Graph:/home/lakso/Documents/Facultad/Algo/tpi/cmake-build-debug/CMakeFiles/tpi.dir/auxiliares.gcno
        -:    0:Data:/home/lakso/Documents/Facultad/Algo/tpi/cmake-build-debug/CMakeFiles/tpi.dir/auxiliares.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Este archivo contiene las definiciones de las funciones auxiliares
        -:    3:// que ustedes necesiten implementar. Tienen que coincidir con las 
        -:    4:// declaraciones de auxiliares.h
        -:    5://
        -:    6:
        -:    7:#include <iostream>
        -:    8:
        -:    9:#include "definiciones.h"
        -:   10:#include "ejercicios.h"
        -:   11:#include "auxiliares.h"
        -:   12:
        -:   13:using namespace std;
        -:   14:
        -:   15:// O(1)
function _Z18esCoordenadaValidaRSt6vectorIS_IbSaIbEESaIS1_EESt4pairIiiE called 1393 returned 100% blocks executed 100%
     1393:   16:bool esCoordenadaValida(tablero& t, pos p) {
     1393:   17:    return p.first >= 0 && p.first < t.size() && p.second >= 0 && p.second < t[0].size();
     1393:   17-block  0
branch  0 taken 1272 (fallthrough)
branch  1 taken 121
     1272:   17-block  1
call    2 returned 1272
branch  3 taken 1155 (fallthrough)
branch  4 taken 117
     1155:   17-block  2
branch  5 taken 1054 (fallthrough)
branch  6 taken 101
     1054:   17-block  3
call    7 returned 1054
call    8 returned 1054
branch  9 taken 951 (fallthrough)
branch 10 taken 103
      951:   17-block  4
      442:   17-block  5
     1393:   17-block  6
        -:   18:}
        -:   19:
        -:   20:// O(n)
function _Z12posEnJugadasRSt6vectorISt4pairIS0_IiiEiESaIS2_EES1_ called 325 returned 100% blocks executed 100%
      325:   21:bool posEnJugadas(jugadas& j, pos p) {
     2733:   22:    for (int i = 0; i < j.size(); i++) {
      325:   22-block  0
     2408:   22-block  1
     2733:   22-block  2
call    0 returned 2733
branch  1 taken 2676
branch  2 taken 57 (fallthrough)
     2676:   23:        if (j[i].first == p) {
     2676:   23-block  0
call    0 returned 2676
call    1 returned 2676
branch  2 taken 268 (fallthrough)
branch  3 taken 2408
      268:   24:            return true;
      268:   24-block  0
        -:   25:        }
        -:   26:    }
       57:   27:    return false;
       57:   27-block  0
        -:   28:}
        -:   29:
        -:   30:// O(n)
function _Z15posEnBanderitasRSt6vectorISt4pairIiiESaIS1_EES1_ called 54 returned 100% blocks executed 100%
       54:   31:bool posEnBanderitas(banderitas& b, pos p) {
       64:   32:    for (int i = 0; i < b.size(); i++) {
       54:   32-block  0
       10:   32-block  1
       64:   32-block  2
call    0 returned 64
branch  1 taken 15
branch  2 taken 49 (fallthrough)
       15:   33:        if (b[i] == p) {
       15:   33-block  0
call    0 returned 15
call    1 returned 15
branch  2 taken 5 (fallthrough)
branch  3 taken 10
        5:   34:            return true;
        5:   34-block  0
        -:   35:        }
        -:   36:    }
       49:   37:    return false;
       49:   37-block  0
        -:   38:}
        -:   39:
function _Z28cantidadDeAparicionesJugadasRSt6vectorISt4pairIS0_IiiEiESaIS2_EES2_ called 98 returned 100% blocks executed 100%
       98:   40:int cantidadDeAparicionesJugadas(jugadas& j, jugada jugada) {
       98:   41:    int cantidad = 0;
     1636:   42:    for (int i = 0; i < j.size(); i++) {
       98:   42-block  0
     1538:   42-block  1
     1636:   42-block  2
call    0 returned 1636
branch  1 taken 1538
branch  2 taken 98 (fallthrough)
     1538:   43:        if (j[i] == jugada) {
     1538:   43-block  0
call    0 returned 1538
call    1 returned 1538
branch  2 taken 98 (fallthrough)
branch  3 taken 1440
       98:   44:            cantidad++;
       98:   44-block  0
        -:   45:        }
        -:   46:    }
       98:   47:    return cantidad;
       98:   47-block  0
        -:   48:}
        -:   49:
function _Z19esPermutacionJugadaRSt6vectorISt4pairIS0_IiiEiESaIS2_EES5_ called 4 returned 100% blocks executed 88%
        4:   50:bool esPermutacionJugada(jugadas& j1, jugadas& j2) {
        4:   51:    if (j1.size() != j2.size()) {
        4:   51-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 0 (fallthrough)
branch  3 taken 4
    #####:   52:        return false;
    %%%%%:   52-block  0
        -:   53:    }
        -:   54:
       53:   55:    for (int i = 0; i < j1.size(); i++) {
        4:   55-block  0
       49:   55-block  1
       53:   55-block  2
call    0 returned 53
branch  1 taken 49
branch  2 taken 4 (fallthrough)
       49:   56:        if (cantidadDeAparicionesJugadas(j1, j1[i]) != cantidadDeAparicionesJugadas(j2, j1[i])) {
       49:   56-block  0
call    0 returned 49
call    1 returned 49
call    2 returned 49
call    3 returned 49
branch  4 taken 0 (fallthrough)
branch  5 taken 49
    #####:   57:            return false;
    %%%%%:   57-block  0
        -:   58:        }
        -:   59:    }
        4:   60:    return true;
        4:   60-block  0
        -:   61:}
        -:   62:
        -:   63:// O(n) (búsqueda lineal)
function _Z15jugadaEnJugadasRSt6vectorISt4pairIS0_IiiEiESaIS2_EES2_ called 62 returned 100% blocks executed 100%
       62:   64:bool jugadaEnJugadas(jugadas& j, jugada jug) {
      171:   65:    for (int i = 0; i < j.size(); i++) {
       62:   65-block  0
      109:   65-block  1
      171:   65-block  2
call    0 returned 171
branch  1 taken 149
branch  2 taken 22 (fallthrough)
      149:   66:        if (j[i] == jug) {
      149:   66-block  0
call    0 returned 149
call    1 returned 149
branch  2 taken 40 (fallthrough)
branch  3 taken 109
       40:   67:            return true;
       40:   67-block  0
        -:   68:        }
        -:   69:    }
       22:   70:    return false;
       22:   70-block  0
        -:   71:}
        -:   72:
        -:   73:// O(n) (3 veces una función de O(n), 3O(n) = O(n))
function _Z13es121VerticalRSt6vectorISt4pairIS0_IiiEiESaIS2_EES2_ called 13 returned 100% blocks executed 65%
       13:   74:bool es121Vertical(jugadas& j, jugada jug) {
       13:   75:    pos p = jug.first;
       13:   76:    return jugadaEnJugadas(j, jug) && jugadaEnJugadas(j, {{p.first, p.second-1},1}) && jugadaEnJugadas(j, {{p.first, p.second+1},1});
       13:   76-block  0
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   76-block  1
branch  3 taken 13 (fallthrough)
branch  4 taken 0
       13:   76-block  2
call    5 returned 13
call    6 returned 13
call    7 returned 13
branch  8 taken 13 (fallthrough)
branch  9 taken 0 (throw)
       13:   76-block  3
branch 10 taken 3 (fallthrough)
branch 11 taken 10
        3:   76-block  4
call   12 returned 3
call   13 returned 3
call   14 returned 3
branch 15 taken 3 (fallthrough)
branch 16 taken 0 (throw)
        3:   76-block  5
branch 17 taken 3 (fallthrough)
branch 18 taken 0
        3:   76-block  6
       10:   76-block  7
       13:   76-block  8
       13:   76-block  9
    $$$$$:   76-block 10
    $$$$$:   76-block 11
    $$$$$:   76-block 12
    $$$$$:   76-block 13
    $$$$$:   76-block 14
    $$$$$:   76-block 15
    $$$$$:   76-block 16
    $$$$$:   76-block 17
        -:   77:}
function _Z15es121HorizontalRSt6vectorISt4pairIS0_IiiEiESaIS2_EES2_ called 15 returned 100% blocks executed 65%
       15:   78:bool es121Horizontal(jugadas& j, jugada jug) {
       15:   79:    pos p = jug.first;
       15:   80:    return jugadaEnJugadas(j, jug) && jugadaEnJugadas(j, {{p.first-1, p.second},1}) && jugadaEnJugadas(j, {{p.first+1, p.second},1});
       15:   80-block  0
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:   80-block  1
branch  3 taken 15 (fallthrough)
branch  4 taken 0
       15:   80-block  2
call    5 returned 15
call    6 returned 15
call    7 returned 15
branch  8 taken 15 (fallthrough)
branch  9 taken 0 (throw)
       15:   80-block  3
branch 10 taken 3 (fallthrough)
branch 11 taken 12
        3:   80-block  4
call   12 returned 3
call   13 returned 3
call   14 returned 3
branch 15 taken 3 (fallthrough)
branch 16 taken 0 (throw)
        3:   80-block  5
branch 17 taken 3 (fallthrough)
branch 18 taken 0
        3:   80-block  6
       12:   80-block  7
       15:   80-block  8
       15:   80-block  9
    $$$$$:   80-block 10
    $$$$$:   80-block 11
    $$$$$:   80-block 12
    $$$$$:   80-block 13
    $$$$$:   80-block 14
    $$$$$:   80-block 15
    $$$$$:   80-block 16
    $$$$$:   80-block 17
        -:   81:}
        -:   82:
        -:   83:// O(n) (Una función en tiempo constante y dos en tiempo lineal)
function _Z12puedeJugarseRSt6vectorIS_IbSaIbEESaIS1_EERS_ISt4pairIiiESaIS6_EERS_IS5_IS6_iESaISA_EES6_ called 10 returned 100% blocks executed 100%
       10:   84:bool puedeJugarse(tablero& t, banderitas& b, jugadas& j, pos p) {
       10:   85:    return esCoordenadaValida(t, p) && !posEnBanderitas(b, p) && !posEnJugadas(j, p);
       10:   85-block  0
call    0 returned 10
branch  1 taken 9 (fallthrough)
branch  2 taken 1
        9:   85-block  1
call    3 returned 9
branch  4 taken 5 (fallthrough)
branch  5 taken 4
        5:   85-block  2
call    6 returned 5
branch  7 taken 4 (fallthrough)
branch  8 taken 1
        4:   85-block  3
        6:   85-block  4
       10:   85-block  5
        -:   86:}
